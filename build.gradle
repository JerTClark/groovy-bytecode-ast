apply plugin: 'idea'
apply plugin: 'groovy'

group = "groovyx.ast.bytecode"
version = "0.1.1-SNAPSHOT"

description = "Provides an AST Transformation which allows to write the body of a method as bytecode"

targetCompatibility = "1.5"
sourceCompatibility = "1.5"

/*
 *
 *
 *   Copyright 2011 CÃ©dric Champeau
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *  /
 * /
 */

// specifies all Maven repositories for resolving external depedencies
repositories {
    mavenCentral()
}

def cobSerFile="${project.buildDir}/cobertura.ser"
def srcOriginal="${sourceSets.main.classesDir}"
def srcCopy="${srcOriginal}-copy"

// external dependencies
dependencies {
    groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.7.6'
    testCompile "org.spockframework:spock-core:0.5-groovy-1.7"
    testRuntime 'net.sourceforge.cobertura:cobertura:1.9.3'
    testCompile "junit:junit:4.8.1"
}

test.doFirst  {
    ant {
        // delete data file for cobertura, otherwise coverage would be added
        delete(file:cobSerFile, failonerror:false)
        // delete copy of original classes
        delete(dir: srcCopy, failonerror:false)
        // import cobertura task, so it is available in the script
        taskdef(resource:'tasks.properties', classpath: configurations.testRuntime.asPath)
        // create copy (backup) of original class files
        copy(todir: srcCopy) {
            fileset(dir: srcOriginal)
        }
        // instrument the relevant classes in-place
        'cobertura-instrument'(datafile:cobSerFile) {
            fileset(dir: srcOriginal,
                   includes:"groovyx/ast/bytecode/**/*.class",
                   excludes:"**/*Test.class")
        }
    }
}

test {
    systemProperties "net.sourceforge.cobertura.datafile": cobSerFile
}

test.doLast {
    if (new File(srcCopy).exists()) {
        // replace instrumented classes with backup copy again
        ant {
            delete(file: srcOriginal)
            move(file: srcCopy,
                     tofile: srcOriginal)
        }
        // create cobertura reports
        ant.'cobertura-report'(destdir:"${project.buildDirName}/test-results",
             format:'html', srcdir:"src/main/groovy", datafile:cobSerFile)
    }
}